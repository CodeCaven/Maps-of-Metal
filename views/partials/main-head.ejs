<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>reddit Vis</title>

    <!--<link rel="shortcut icon" type="image/jpg" href="/images/favicon.jpg"/> -->
    
    <script src="https://d3js.org/d3.v6.js"></script>
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/Turf.js/5.1.5/turf.min.js"></script>turf for d3 winding order-->
    <!--<script src="https://d3js.org/d3.v4.min.js"></script> D3 v4 for events-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/themes/translucent.css"/>
    <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/animations/scale.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/> <!--leaflet-->
     

    <script src="./javascripts/global.js"></script>
    <script type="text/javascript">

        // get data from controller
        let thrash_bands = JSON.parse(<%-JSON.stringify(ejs_thrash_bands)%>);
        let thrash_lookup = JSON.parse(<%-JSON.stringify(ejs_thrash_lookup)%>);
        

        // global units
        let vhu;
        let vwu;

        // global variables
        let current_year = 1987;
        let prev_year;
        let thrash_markers = {};
        let map;
        let mapArea = "North America";
        let mapAreaBounds = {"World":[[61.773123, -176.963533],
                                      [-57.891497, 179.649303],
                                    ], "North America":[[52.536273, -131.116056],[19.394068, -71.311409]], 
                                       "U.K":[[58.043004, -8.157359], [50.021858,1.165130]], 
                                       "South America":[[32.916485, -125.484399], [-53.696706, -35.056629]], 
                                       "Europe": [[59.578851,2.256051],[37.805444, 26.933037]]};
        let mapViews = {"World":[41.574361, 5.872599], "North America":[38.616870, -104.379861], 
                                "U.K":[51.686180,-1.033570], "South America":[-12.125264, -58.274904], 
                                "Europe": [50.972265, 10.574707]};
        let mapZooms = {"World":2,"North America":4, "U.K":6,"South America":3, "Europe":4};

        // DOM loaded callback
		document.addEventListener('DOMContentLoaded', function() {

           //https://leafletjs.com/reference.html

           // HERE
           // add polylines to map
           // extend oval (40 or 50 kms?)
            
           // log data
           console.log(thrash_bands);
           console.log(thrash_lookup);

           // global units
           vhu = parseFloat(window.innerHeight/100);
           vwu = parseFloat(window.innerWidth/100);
           console.log("height and width window units");
           console.log(vhu);
           console.log(vwu);

           // set chart height (bootstrap determines width)
           document.getElementById("plot_div").style.height = "90vh";

           // event listeners
           document.getElementById('yearControl').addEventListener("click", handleYear);
           document.getElementById('mapDropdown').addEventListener("click", handleMapArea);


           // set year and area display
           document.getElementById("yearDisplay").innerHTML = current_year;
           document.getElementById("dropdownDisplay").innerHTML = mapArea;
 
            
           add_bands(thrash_bands);
           init_bands_by_year(current_year);
           //add_polylines();

           
         }, false);

         // event handlers
         function handleMapArea(el){
            mapArea = el.target.innerHTML;
            document.getElementById("dropdownDisplay").innerHTML = mapArea;
            

            // move and set map
            map.setZoom(mapZooms[mapArea]);
            map.flyTo(mapViews[mapArea], mapZooms[mapArea]);
            map.setMaxBounds(mapAreaBounds[mapArea]);
            map.fitBounds(mapAreaBounds[mapArea]);
            map.setMinZoom(mapZooms[mapArea]);

         }

         function handleYear(event){
            var direction = event.target.id;
            var year_display = document.getElementById("yearDisplay");

            if(direction=='left'){
                if(current_year == 1973){
                    return;
                }
                else{
                    prev_year = current_year;
                    current_year -= 1;
                    year_display.innerHTML = current_year;
                    update_map();
                    return;
                }
            }

            if(direction=='right'){
                if(current_year == 2023){
                    return;
                }
                else{
                    prev_year = current_year;
                    current_year += 1;
                    year_display.innerHTML = current_year;
                    update_map();
                    return;
                }
            }
         }

         function add_polylines(){
            for(let band of thrash_bands){
                L.polyline([[band['loc']['latitude'], band['loc']['longitude']],[[band['display_loc']['latitude'], band['display_loc']['longitude']]]], {color: 'red'}).addTo(map);
            }
         }

         // update map for year
         function update_map(){
            
            // get indexes
            var prev_band_indexes = thrash_lookup[prev_year];
            var curr_band_indexes = thrash_lookup[current_year];

            // markers to add/remove
            var add_indexes = curr_band_indexes.filter(i => !prev_band_indexes.includes(i));
            var remove_indexes = prev_band_indexes.filter(i => !curr_band_indexes.includes(i));

            // out of viewport (add)
            var add_indexes_out = [];
            var remove_indexes_out = [];
            for(let i=0; i<add_indexes.length; i++){
                if(!(map.getBounds().contains(thrash_markers[add_indexes[i]].getLatLng()))){
                    add_indexes_out.push(add_indexes.splice(i,1)[0]);
                }
            }
            
            //console.log("Check indexes");
            //console.log(add_indexes_out);
            //console.log(add_indexes);

            // https://atomizedobjects.com/blog/javascript/how-to-make-a-loop-wait-in-javascript/
            // loop delay (a staggered loop)
            const delay = async (ms = 1000) => new Promise(resolve => setTimeout(resolve, ms));
            async function scatter_loop(){
                for(let a of add_indexes){

                    // get band
                    var band = thrash_bands.filter(o => o.index == a)[0];

                    // add marker
                    thrash_markers[a].addTo(map);
            
                    d3.select("#thrash"+a).style("opacity", 0)
                    .transition().duration(500).style("opacity", 1);

                    d3.select("#thrash"+a).attr("transform", 'scale(1.5)');

                    // set band marker id
                    var marker_parent = document.getElementById("thrash"+a).parentNode;
                    marker_parent.id = "marker"+a;

                    // show band name text
                    d3.select("#marker"+a).append('div')
                    .html(band.name.toUpperCase())
                    .attr('class', 'marker-text')
                    .attr("id", "text"+a);

                    d3.select("#text"+a).style("opacity", 0)
                    .transition().duration(300).style("opacity", 1)
                    .transition().duration(300).style("opacity", 0).remove();

                    await delay(600);
                }
            }

            // run loop
            scatter_loop();

            // add out of view (no text)
            for(let a of add_indexes_out){

                // get band
                var band = thrash_bands.filter(o => o.index == a)[0];

                // add marker
                thrash_markers[a].addTo(map);

                d3.select("#thrash"+a).attr("transform", 'scale(1.5)');

                // set band marker id
                var marker_parent = document.getElementById("thrash"+a).parentNode;
                marker_parent.id = "marker"+a;
            }

            // remove from map (all at once atm)
            for(let r of remove_indexes){

                // get band
                var band = thrash_bands.filter(o => o.index == r)[0];

                d3.select("#marker"+r).append('div')
                .html(band.name)
                .attr('class', 'marker-text-remove')
                .attr("id", "text"+r);

                // randomly animate
                var text_div = document.getElementById("text"+r);
                var text_box = text_div.getBoundingClientRect();
                var plusOrMinus = Math.random() < 0.5 ? -1 : 1;
                var randomX = Math.random()*50*plusOrMinus;
                var randomY = Math.random()*50*plusOrMinus;
                text_div.style.transform = `translate(${randomX}px,${randomY}px)`;

                d3.select("#text"+r).transition().duration(1000).style("color", "white")
                .transition().duration(1000).style("opacity", 0);

                //remove marker/icon and text svg
                d3.select("#thrash"+r).transition().duration(2000).style("opacity", 0);
                setTimeout(function(){
                    
                    d3.select("#text"+r).remove();
                    thrash_markers[r].removeFrom(map);
                }, 2000);
                  
            }

         }

         // init by current year
         function init_bands_by_year(year){

            // get indexes
            var band_indexes = thrash_lookup[year];

            for(let index of band_indexes){
                thrash_markers[index].addTo(map);

                d3.select("#thrash"+index).attr("transform", 'scale(1.5)');

                // set band marker id
                var marker_parent = document.getElementById("thrash"+index).parentNode;
                marker_parent.id = "marker"+index;
            }

            // filter for bands
            //var bands = thrash_bands.filter(o => band_indexes.includes(o.index));
         }

        //Mapbox tiles and layers-->
        // mapbox://styles/scav6/clff9jytl000s01olw0tp2vva-->
        // mapbox://styles/scav6/ck9o7yz7o06zd1ip9091685m3-->
        // mapbox://styles/scav6/ck9oe4ej300r81ipkwfn7tt9g-->
        // mapbox://styles/scav6/clff9dqt6001201o0tpcwzng7-->
        // mapbox://styles/scav6/clqtj5we800dj01r869z76883
        
        //streets-v9
        //satellite-streets-v9
        //light-v9
        //dark-v9
        //outdoors-v9

         // function to add band markers
         function add_bands(bands){

            // leaflet map..can use fitBounds for auto zoom
            map = L.map("plot_div");
            //map.fitBounds(mapAreaBounds[mapArea]);
            //map.setMaxBounds(mapAreaBounds[mapArea]);
            //map.setView([38.341, -461.503], 4);
            //map.setMaxBounds(mapAreaBounds[mapArea]);
            

            // mapbox (NOTE: don't push to github!!!... remove Onboarding token)
            var mapboxUrl = 'https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}';
            var accessToken = 'pk.eyJ1Ijoic2NhdjYiLCJhIjoiY2s5bzZ6dGVvMDl4eDNlcnZjbG8xM2RraiJ9.igVNjfxyOYCvwGSflM9DQA';
                
            // tiles
            L.tileLayer(mapboxUrl, {id: 'dark-v9', attribution: '', maxZoom: 20, accessToken: accessToken}).addTo(map);
            //L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                //attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            //}).addTo(map);

            // thrash icon
            /*
            var thrashIcon = L.icon({
                iconUrl: '/images/devil-horns-transparent-21.png',
                iconSize: [30]
                //shadowUrl: '/images/devil-horns-2.png',
                //shadowSize: [5, 5],
                
            });
            */

            // centre, bounds (for pan) and zoom
            map.setView(mapViews[mapArea], mapZooms[mapArea]);
            map.setMaxBounds(mapAreaBounds[mapArea]);
            map.setMinZoom(mapZooms[mapArea]);
            //<object data="happy.svg" width="300" height="300"> </object>

            // add thrash icons
            for(let band of bands){
                var band_name = band.name.replace("(band)", "").trim();
                var band_name = band_name.replace("(American band)", "");
                var svg_icon = get_thrash_icon(band.index, band_name);
                
                //console.log(svg_icon);
                const svgIcon = L.divIcon({
                    html: svg_icon,
                    className: "", // leave as will assign a class with css otherwise
                    iconSize: [32, 64],
                    iconAnchor: [16, 32]
                    });
                
                // add a marker (create but don't add to map)
                var marker = L.marker([band.display_loc.latitude, band.display_loc.longitude], {icon: svgIcon, interactive:true})
                .bindPopup(band.name);
                thrash_markers[band.index] = marker; // store markers globally

            }
           
        }

    </script>
</head>